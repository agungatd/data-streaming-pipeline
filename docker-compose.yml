services:
  # ZooKeeper for Kafka
  # zookeeper:
  #   image: confluentinc/cp-zookeeper:7.2.2
  #   container_name: zookeeper
  #   ports:
  #     - "2181:2181"
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #   networks:
  #     - streaming-network

  # # Kafka broker
  # kafka:
  #   image: confluentinc/cp-kafka:7.2.2
  #   container_name: kafka-broker
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
  #     KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_CREATE_TOPICS: "data-topic:1:1"
  #   depends_on:
  #     - zookeeper
  #   networks:
  #     - streaming-network

  # # Kafka UI for monitoring
  # kafka-ui:
  #   image: provectuslabs/kafka-ui:v0.7.2
  #   container_name: kafka-ui
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     KAFKA_CLUSTERS_0_NAME: local
  #     KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
  #     KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
  #   depends_on:
  #     - kafka
  #   networks:
  #     - streaming-network

  # # Flink JobManager
  # flink-jobmanager:
  #   image: flink:1.20.1
  #   container_name: flink-jobmanager
  #   ports:
  #     - "8081:8081"
  #   command: jobmanager
  #   environment:
  #     - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
  #   networks:
  #     - streaming-network

  # # Flink TaskManager
  # flink-taskmanager:
  #   image: flink:1.20.1
  #   container_name: flink-taskmanager
  #   depends_on:
  #     - flink-jobmanager
  #   command: taskmanager
  #   environment:
  #     - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
  #   networks:
  #     - streaming-network

  # StarRocks FE (Frontend)
  starrocks-fe:
    image: starrocks/fe-ubuntu:3.3.10
    container_name: starrocks-fe
    ports:
      - "8030:8030"  # Web UI
      - "9020:9020"  # RPC port
      - "9030:9030"  # MySql port
    environment:
      - FE_SERVERS=starrocks-fe:9010
      - PRIORITY_NETWORKS=172.0.0.0/8
    volumes:
      - starrocks-fe-meta:/opt/starrocks/fe/meta
    healthcheck:
      test: ["CMD", "mysql", "-h", "localhost", "-P", "9030", "-u", "root", "-e", "SELECT 1;"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - streaming-network

  # StarRocks BE (Backend)
  starrocks-be:
    image: starrocks/be-ubuntu:3.3.10
    container_name: starrocks-be
    ports:
      - "8040:8040"  # Web UI
      - "9060:9060"  # RPC port
    environment:
      - FE_SERVERS=starrocks-fe:9020
      - PRIORITY_NETWORKS=172.0.0.0/8
    volumes:
      - starrocks-be-storage:/opt/starrocks/be/storage
    depends_on:
      - starrocks-fe
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8040/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - streaming-network

  # Data generator service
  # data-generator:
  #   build:
  #     context: ./data-generator
  #   depends_on:
  #     - kafka
  #     - starrocks-fe
  #   networks:
  #     - streaming-network

  # # Flink job launcher
  # flink-job-launcher:
  #   build:
  #     context: ./flink-job
  #   depends_on:
  #     - flink-jobmanager
  #     - kafka
  #     - starrocks-fe
  #   networks:
  #     - streaming-network

networks:
  streaming-network:
    driver: bridge

volumes:
  starrocks-fe-meta:
  starrocks-be-storage: